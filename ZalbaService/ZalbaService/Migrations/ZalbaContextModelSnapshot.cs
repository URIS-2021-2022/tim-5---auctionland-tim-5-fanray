// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ZalbaService.Entities;

namespace ZalbaService.Migrations
{
    [DbContext(typeof(ZalbaContext))]
    partial class ZalbaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.22")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ZalbaService.Entities.RadnjaNaOsnovuZalbe", b =>
                {
                    b.Property<Guid>("RadnjaNaOsnovuZalbeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NazivRadnjeNaOsnovuZalbe")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RadnjaNaOsnovuZalbeID");

                    b.ToTable("RadnjaNaOsnovuZalbe");

                    b.HasData(
                        new
                        {
                            RadnjaNaOsnovuZalbeID = new Guid("78f43850-ddc4-49ba-b71d-62266a13a164"),
                            NazivRadnjeNaOsnovuZalbe = "JN ide u drugi krug sa novim uslovima"
                        },
                        new
                        {
                            RadnjaNaOsnovuZalbeID = new Guid("f0b093b4-b2ea-45e8-99d4-55e0b2d703b7"),
                            NazivRadnjeNaOsnovuZalbe = "JN ide u drugi krug sa starim uslovima"
                        },
                        new
                        {
                            RadnjaNaOsnovuZalbeID = new Guid("ed7da07e-c1f6-4d4f-882c-d6c4b5118e46"),
                            NazivRadnjeNaOsnovuZalbe = "JN ne ide u drugi krug"
                        });
                });

            modelBuilder.Entity("ZalbaService.Entities.StatusZalbe", b =>
                {
                    b.Property<Guid>("StatusZalbeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NazivStatusaZalbe")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StatusZalbeID");

                    b.ToTable("StatusZalbe");

                    b.HasData(
                        new
                        {
                            StatusZalbeID = new Guid("567ada34-3b58-4925-9227-7fa1be213f7e"),
                            NazivStatusaZalbe = "Usvojena"
                        },
                        new
                        {
                            StatusZalbeID = new Guid("8bb54326-11a9-4f6f-9dca-6afb917ba2bf"),
                            NazivStatusaZalbe = "Odbijena"
                        },
                        new
                        {
                            StatusZalbeID = new Guid("c6fb5ac5-eaef-4db2-99a5-84a938972183"),
                            NazivStatusaZalbe = "Otvorena"
                        });
                });

            modelBuilder.Entity("ZalbaService.Entities.TipZalbe", b =>
                {
                    b.Property<Guid>("TipZalbeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NazivTipaZalbe")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TipZalbeID");

                    b.ToTable("TipZalbe");

                    b.HasData(
                        new
                        {
                            TipZalbeID = new Guid("42058551-6a8a-4485-af7f-1124de19e566"),
                            NazivTipaZalbe = "Žalba na tok javnog nadmetanja"
                        },
                        new
                        {
                            TipZalbeID = new Guid("e3470949-664c-41fc-af1a-6850ff5a7a80"),
                            NazivTipaZalbe = "Žalba na Odluku o davanju u zakup"
                        },
                        new
                        {
                            TipZalbeID = new Guid("7e82c9ce-c998-40c0-b743-6b9456d3629e"),
                            NazivTipaZalbe = "Žalba na Odluku o davanju na korišćenje"
                        });
                });

            modelBuilder.Entity("ZalbaService.Entities.Zalba", b =>
                {
                    b.Property<Guid>("ZalbaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Broj_Nadmetanja")
                        .HasColumnType("int");

                    b.Property<int>("Broj_Resenja")
                        .HasColumnType("int");

                    b.Property<DateTime>("Datum_Podnosenja_Zalbe")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Datum_Resenja")
                        .HasColumnType("datetime2");

                    b.Property<string>("Obrazlozenje")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RadnjaNaOsnovuZalbeID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Razlog_Podnosenja_Zalbe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("StatusZalbeID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TipZalbeID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ZalbaID");

                    b.HasIndex("RadnjaNaOsnovuZalbeID");

                    b.HasIndex("StatusZalbeID");

                    b.HasIndex("TipZalbeID");

                    b.ToTable("Zalba");

                    b.HasData(
                        new
                        {
                            ZalbaID = new Guid("42058551-6a8a-4485-af7f-1124de19e566"),
                            Broj_Nadmetanja = 53,
                            Broj_Resenja = 13,
                            Datum_Podnosenja_Zalbe = new DateTime(2020, 11, 15, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Datum_Resenja = new DateTime(2021, 1, 17, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Obrazlozenje = "Neispravno utvređno stanje razgraničenja parcela",
                            RadnjaNaOsnovuZalbeID = new Guid("78f43850-ddc4-49ba-b71d-62266a13a164"),
                            Razlog_Podnosenja_Zalbe = "Bitna povreda odredaba parničnog postupka",
                            StatusZalbeID = new Guid("c6fb5ac5-eaef-4db2-99a5-84a938972183"),
                            TipZalbeID = new Guid("42058551-6a8a-4485-af7f-1124de19e566")
                        });
                });

            modelBuilder.Entity("ZalbaService.Entities.Zalba", b =>
                {
                    b.HasOne("ZalbaService.Entities.RadnjaNaOsnovuZalbe", "RadnjaNaOsnovuZalbe")
                        .WithMany()
                        .HasForeignKey("RadnjaNaOsnovuZalbeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZalbaService.Entities.StatusZalbe", "StatusZalbe")
                        .WithMany()
                        .HasForeignKey("StatusZalbeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZalbaService.Entities.TipZalbe", "TipZalbe")
                        .WithMany()
                        .HasForeignKey("TipZalbeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
